1 + 3
eq
explore ta230224.csv
explore
more ta230224.csv
ltm
cat ta230224.csv | grep protonmail
ltm
mm
for i in 1..10 { if $i == 2 { break }; print $i }
for i in 1..10 { if $i == 7 { break }; print $i }
config
env
$env
$nu
$nu.configpath
$nu.config-path
configpath
$nu
$nu
e arkk.csv
ioxnamespace
use bananas;
ioxwrite "h2o_temperature,location=puget_sound,state=WA surface_degrees=53.7,bottom_degrees=42.1 16007456160"
ioxnamespace
export IOX_DBNAME='plums'
ioxwritefile ./temperature.lp
env | <\n>grep IOX
ioxsql "show tables"
ioxsql -d bananas "select * from cpu"
ioxnamespace
ioxsql -d low_card "select * from *"
ioxsql "show tables"
ioxsql "show tables"
ioxwrite "h2o_temperature,location=puget_sound,state=WA surface_degrees=53.7,bottom_degrees=42.1 16007456160"
ioxnamespace
ioxsql "show tables"
ioxsql "select * from system"
ioxsql "select * from iox"
ioxsql "select * from m0"
ioxsql "select * from queries"
ioxsql "select * from tables"
ioxsql "select * from m0"
ioxsql "show columns from m0"
ioxsql "select * from m0"
ioxsql "select * from m0"
ioxnamespace
show namespaces
ioxnamespace
ioxwrite "h2o_temperature,location=puget_sound,state=WA surface_degrees=53.7,bottom_degrees=42.1 16007456160"
nuconfig
for i in 1..3 { print $i }
echo "foo" | each { |it| echo $"($it)" }
echo "foo boo" | each { |it| echo $"($it)" }
for i in 1..3
for i in 1..3 | echo i
for i in 1..3 { print $i }
for i in 1..3 {echo $i }
for i in 1..3 {sum $i }
for i in 1..3 {sort $i }
for i in 1..3 {sort }
(1 2 3)
"1 2 3"
"1 2 3" | sort 
[airplane Truck Car] | sort -i
nurun -n
for i in 1..10 { if $i == 2 { break }; print $i }
[1, 2, 3, 4, 5] | each {|x| if $x > 3 { break }; $x}
print (2 + 3)
pwd
ca q1.out
cargo run -- crates/nu-std/tests.nu
main
eq
pwd
17
pwd
j
pwd
dfr sample
[[a b]; [1 2] [3 4]] | dfr into-df | dfr to-csv test.csv
git status
cat test.csv
test
test --fast --dataframe
test --fast --dataframe dataframe::
test --fast --dataframe
test --fast --dataframe
test --fast --dataframe
nurun -n
$df | dfr first
./../nuscripts/dfcheck.nu
$df | dfr first
$df | dfr dtypes
$nu.startup-time
nurun
2 | bits and 2
[4 3 2] | bits and 2
[4 3 2] | bits not -s
17 | bits ror 60
17 | bits ror 60
17 | bits ror 60
[4 3 2] | bits and 2
[4 3 2] | bits and 2
[4 3 2] | bits and 2
$nu.startup-time
[4 3 2] | bits and 2
[4 3 2] | bits or 2
bits
bis
bits
bits
bits
bits and
bits and 4
2 | bits and 2
3 | bits and 3
str
pwd
[4 3 2] | bits or 2
[4 3 2] | bits and 2
bits shr 4
4 | bits shr
bits
[4 3 2] | bits not -n '2'
$nu.startup-time
$nu.startup-time
4 | bits shr
4 | bits shr
bits shr 4
[4 3 2] | bits and 2
[4 3 2] | bits and 2
[4 3 2] | bits and 2
[4 3 2] | bits and 2
[4 3 2] | bits and 2
[4 3 2] | bits and 2
[4 3 2] | bits and 2
[4 3 2] | bits and 2
[4 3 2] | bits and 2
[4 3 2] | bits and 2
scope aliases
scope commands
scope
scope modules
0x[1F FF AA AA] | bytes add 0x[AA]
0x[1F FF AA AA] | bytes add 0x[AB]
0x[1F FF AA AA] | bytes add 0x[ABFF]
0x[1F FF AA AA] | bytes add 0x[ABFF]
0x[1F FF AA AA] | bytes add 0x[ABFF]
0x[10 AA FF AA FF] | bytes remove 0x[10 AA]
0x[10 AA FF AA FF] | bytes remove 0x[10 99]
0x[10 AA FF AA FF] | bytes remove 0x[10 99]
0x[10 AA FF AA FF] | bytes remove 0x[10 99]
0x[1F FF AA AA] | bytes add 0x[ABFF]
[4 3 2] | bits and 2
[4 3 2] | bits and 2
0x[10 AA FF AA FF] | bytes remove 0x[10 99]
0x[10 AA FF AA FF] | bytes remove 0x[10 99]
[4 3 2] | bits and 2
0x[10 AA FF AA FF] | bytes remove 0x[10 99]
[4 3 2] | bits and 2
[4 3 2] | bits and 2
0x[10 AA FF AA FF] | bytes remove 0x[10 99]
0x[10 AA FF AA FF] | bytes remove 0x[10 99]
[4 3 2] | bits and 2
gstat
format
exi
$x
cre sub_subcommand
gstat
nuconfig
t1x
$nu
$nu.config-path
configpath
alias configpath = ($.nu.config-path)
$env.PROMPT_COMMAND_RIGHT = { "" }
nuconfig
nuconfig
pwd
ga alias.nu
stars
http get https://api.github.com/repos/nushell/nushell | get stargazers_count
stars
stars
hmei
[[a b]; [1 2] [3 4] [5 6]] | roll down
$nu.startup-time
$nu.startup-time
$nu.startup-time
$nu.startup-time
$nu.startup-time
$nu.startup-time
$nu.startup-time
[-50 100.0 25] | math avg
[-50 100 25] | math min
[50 100 25] | math min
[50 100 25] | math max
[1 2 3] | math sum
[1 2 3] | sum
[1 2 3] | sum
sum toolkit.nu
17
t17
arc
arc
arc
arc
arc
arc
ga math.nu
t17
arc
arc
arc
arc
arc
arc
arc
ga math.nu
arc
arc
arc
ga math.nu
t17
arc
arc
arc
math pi | math round --precision 2
(math pi) / 2 | math sin
[0 90 180 270 360] | math cos -d
[0 90 180 270 360] | math cos -d
100 | math log 10
[16 8 4] | math log 2
0 | math exp
1 | math exp
1 | math exp
[[lang, gems]; [nu_test, 100]] | str camel-case lang
[[lang, gems]; [michael_i_angerman, 100]] | str camel-case lang
'michael_i_angerman' | str camel-case
'Michael_I_Angerman' | str camel-case
'John_went_to_the_store' | str camel-case
'michael i angerman ate peanut butter' | str title-case
'this_is_the_second_case' | str camel-case
'this-is-the-first-case' | str camel-case
'this-is-the-first-case' | str camel-case
nuconfig
echo $nu
banner
path
path
$nu
$nu.default-config-dir | path
$nu.default-config-dir | path basename
$nu.default-config-dir | path dirname
$nu.default-config-dir | path exists
$nu.default-config-dir | path parse
$nu.default-config-dir | path split
$nu.default-config-dir | path type
nuno
which cp
which rg
which du
which yes
which which
configpath
config
$nu.default-config-dir | path type
$nu.default-config-dir
$nu
rg sqlite
RUST_LOG=info cre ex04
hc
hc
sled
l examples/
cre ex04
RUST_LOG=info cre ex04
ga examples/ex04.rs
gpo t1
random bool
random
random
http get https://api.github.com/repos/nushell/nushell | get stargazers_count
http get https://finance.yahoo.com/gainers
http get https://finance.yahoo.com/gainers | to csv
http get https://finance.yahoo.com/gainers | to json
http get https://finance.yahoo.com/gainers
e look.json
eq
rg 'Load a file into a cell'
start https://www.nushell.sh
du -sh *
l viewers/
l path
sledt
09
pwd
for i in 1..10 { if $i == 2 { break }; print $i }
cargo install nu_plugin_from_parquet
rm nu_plugin_from_parquet
eq
register ./nu_plugin_from_parquet/
register /Users/ma/j/tmp17/nushell/crates/nu_plugin_from_parquet/
register /Users/ma/j/tmp17/nushell/crates/nu_plugin_from_parquet/
register ~/.cargo/bin/nu_plugin_from_parquet
register ./nu_plugin_from_parquet
$nu.plugin-path
register ./nu_plugin_len
"hello" | len
"hello" | len
register ./nu_plugin_inc
4 | inc
7 | inc
bill | len
'this-is-the-first-case' | len
register ./nu_plugin_len
"hello" | len
"hello" | len
"michael i angerman" | len
register ./nu_plugin_len
"michael i angerman" | len
"michael i angerman" | len
"sam<\n>" | len
"iris angerman" | len
cb
eq
register ./nu_plugin_len
"iris angerman" | len
register ./nu_plugin_len
"iris angerman" | len
cb
eq
register ./nu_plugin_len
"iris angerman" | len
register ./nu_plugin_from_parquet
register ./nu_plugin_from_parquet
eq
iox sql
$.nu.aliases
$.nu
$nu.aliases
$nu
99
t99
t06
t06
t99
t99
./target/debug/influxdb_iox
./influxdb_iox
./influxdb_iox
./influxdb_iox query company_sensors "SELECT * FROM cpu LIMIT 10"
./influxdb_iox query company_sensors "SELECT * FROM cpu LIMIT 10"
which influxdb_iox
which angerman
cargo run
./influxdb_iox
cargo run
cargo run -vv
./influxdb_iox
cargo run
cargo run
$nu.config-path
env
env
cargo run
cargo run
./target/debug/influxdb_iox query company_sensors "SELECT * FROM cpu LIMIT 10"
iox sql
use log.nu
eq
use log.nu
echo $nu.env-path
ioxsql
ioxsql --dbname company_sensors "SELECT * FROM cpu LIMIT 10"
ioxsql --dbname company_sensors "SELECT * FROM cpu LIMIT 10"
ioxsql --dbname company_sensors "SELECT * FROM cpu LIMIT 10" | get cpu
ioxsql --dbname company_sensors "SELECT * FROM cpu LIMIT 10" | get usage_idle
ioxsql --dbname company_sensors "SELECT * FROM cpu LIMIT 10" | get usage_idle
ioxsql --dbname company_sensors "SELECT * FROM cpu LIMIT 10<\n>"
ioxsql --dbname company_sensors "SELECT * FROM cpu LIMIT 10"
ioxsql "show tables"
ioxsql --dbname company_sensors "show tables"
ioxsql --dbname company_sensors "show columns from cpu"
ioxsql --dbname company_sensors "show columns from disk"
ioxsql --dbname company_sensors "show columns from processes"
ioxsql --dbname company_sensors "show columns from processes"
ioxsql --dbname company_sensors "show columns from processes"
ioxsql "show columns from processes"
$env
$env | get IOX_DBNAME
$env.IOX_DBNAME = 'bananas'
$env | get IOX_DBNAME
$env | get IOX_DBNAME
$env.IOX_DBNAME = 'bananas'
$env | get IOX_DBNAME
ioxwrite "h2o_temperature,location=puget_sound,state=WA surface_degrees=53.7,bottom_degrees=42.1 16007456160"
ioxwrite "h2o_temperature,location=puget_sound,state=WA surface_degrees=53.7,bottom_degrees=42.1 16007456160"
ioxwrite "h2o_temperature,location=puget_sound,state=WA surface_degrees=53.7,bottom_degrees=42.1 16007456160"
ioxwrite "h2o_temperature,location=puget_sound,state=WA surface_degrees=53.7,bottom_degrees=42.1 16007456160"
ioxwrite "h2o_temperature,location=puget_sound,state=WA surface_degrees=513.7,bottom_degrees=42.1 16807456160"
ioxsql --dbname company_sensors "SELECT * FROM cpu LIMIT 10"
ioxsql --dbname company_sensors "SELECT * FROM cpu-total LIMIT 10"
ioxsql --dbname company_sensors "SELECT * FROM tables"
ioxwritefile ./metrics.lp
ioxwritefile ./metrics.lp
ioxsql --dbname company_sensors "SELECT * FROM tables"
ioxsql --dbname company_sensors "SELECT * FROM cpu LIMIT 10"
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql "SELECT * FROM cpu LIMIT 10" | get usage_idle
ioxnamespace
histor
$env.IOX_DBNAME = 'bananas'
ioxwrite "h2o_temperature,location=puget_sound,state=WA surface_degrees=53.7,bottom_degrees=42.1 16007456160"
$env.IOX_DBNAME = 'nm_pop'
ioxwrite "h2o_temperature,location=puget_sound,state=WA surface_degrees=53.7,bottom_degrees=42.1 16007456160"
ioxnamespace
ioxsql --dbname nm_pop "select * from *"
ioxsql "select * from tables"
ioxsql "show tables"
ioxsql -d nm_pop "show tables"
ioxsql -d nm_pop "select * from h2o_temperature"
ioxwritefile ./metrics.lp
ioxsql "SELECT * FROM cpu LIMIT 10" | get usage_idle
$env.IOX_DBNAME = 'nm_pop'
ioxwrite "h2o_temperature,location=puget_sound,state=WA surface_degrees=53.7,bottom_degrees=42.1 16007456160"
ioxnamespace
ioxsql --dbname nm_pop "select * from *"
ioxsql -d nm_pop "select * from h2o_temperature"
ioxsql --dbname nm_pop "select * from *"
ioxsql "select * from *"
ioxwrite "hola"
ioxwrite "h2o_temperature,location=puget_sound,state=WA surface_degrees=53.7,bottom_degrees=42.1 16007456160"
ioxwrite --dbname joe "blow"
ioxwrite --dbname joe_blow "go"
ioxwritefile bill
ioxwritefile "why"
ioxnamespace me
ioxsql me
namespace
ioxnamespace me
ioxnamespace
ioxsql me
ioxsql rick
ioxsql paul
cargo seach nu_plugin --limit 10
cargo search nu_plugin --limit 10
cargo search nu_plugin --limit 10 | lines
cargo search nu_plugin --limit 10 | lines | parse "{crate_name}<\n>"
cargo search nu_plugin --limit 10 | lines | parse "{crate_nam<\n><\n>"
cargo search nu_plugin --limit 10 | lines | parse "{crate_name} ={version} #{description}"<\n>"<\n><\n>"
cargo search nu_plugin --limit 10
cargo search nu_plugin --limit 10 | lines
cargo search nu_plugin --limit 10 | lines | parse "{crate_name} = {version} #{description}"
$env.config.color_config.leading_trailing_space_bg = {bg: sandybrown}
cargo search nu_plugin --limit 10 | lines | parse "{crate_name} = {version} #{description}"
$env.config.color_config.leading_trailing_space_bg = {bg: sandybrown}
cargo search nu_plugin --limit 10 | lines | parse "{crate_name} = {version} #{description}"
$env.config.color_config.leading_trailing_space_bg = {bg: sandybrown}<\n>cargo search nu_plugin --limit 10 | lines | parse "{crate_name} = {version} #{description}"
cargo search nu_plugin --limit 10 | lines | parse "{crate_name} = {version} #{description}"
$env.config.color_config.leading_trailing_space_bg = {bg: sandybrown}<\n>cargo search nu_plugin --limit 10 | lines | parse "{crate_name} = {version} #{description}"
$env.config.color_config.leading_trailing_space_bg = {bg: sandybrown}<\n>cargo search nu_plugin --limit 10 | lines | parse "{crate_name} = {version} #{description}"
$env.config.color_config.leading_trailing_space_bg = {bg: sandybrown}<\n>cargo search nu_plugin --limit 100 | lines | parse "{crate_name} = {version} #{description}"
ioxsql paul
ioxsql michele
ioxsql michele
ioxsql michele
ioxsql "select * from *"
ioxsql --dbname company_sensors "SELECT * FROM tables"
ioxsql "SELECT * FROM cpu LIMIT 10" | get usage_idle
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql dog
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql boo
ioxsql jackass
ioxsql jackass
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql jackass
ioxsql jackass
ioxsql "SELECT * FROM cpu LIMIT 10"
cf
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql jackass
ioxsql jackass
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql jackass
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql jackass
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql jackass
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql jackass
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql jackass
ioxsql jackass
ioxsql jackass
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql "SELECT * FROM ass LIMIT 10"
ioxsql "SELECT * FROM ass LIMIT 10"
ioxsql "SELECT * FROM ass LIMIT 10"
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql ding
ioxsql "SELECT * FROM cxpu LIMIT 10"
ioxsql "SELECT * FROM cxpu LIMIT 10"
ioxsql ding
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql ding
[-50 100 25] | math max
[-50 100 20134 25] | math max
ioxsql ding
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxnamespace
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql dog
ioxwritefile ./test_fixtures/lineproto/metrics.lp
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxwrite -d bananas "cpu,region=la user=955111599 222522"
ioxwrite -d my_bananas "cpu,region=la user=955111599 222522"
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxsql -d my_bananas "select * from cpu"
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxwrite -d bananas "cpu,region=la user=955111599 222522"
ioxwrite -d my_bananas "cpu,region=la user=955111599 222522"
ioxsql -d my_bananas "select * from cpu"
ioxsql "SELECT * FROM cpu LIMIT 10"
ioxwrite -d my_bananas "cpu,region=la user=955111599 222522"
ioxsql -d my_bananas "select * from cpu"
rustc -V
rustc -V
$db
$db | schema | table -e
$db | query db 'insert into nudb (bool1,int1,float1,str1,datetime1) values (2,200,2.0,'str2','1969-04-17T06:00:00-05:00')'
$db | query db 'select * from nudb'
$db
$db | schema
$db | schema | table -e
$db
[[a b]; [1 2] [2 [4 4]]<\n>]
[[a b]; [1 2] [2 [4 4]]] | table -e
[[a b]; [1 2] [2 [4 4]]] | table --collapse
$db | table --collapse
schema
1 + 3
1 + 3
1 + 3
1 + 3
1 + 3
1 + 3
1 + 3
1 + 3
1 + 3
1 + 3
1 + 3
$x
$x
1 + 3
$x
1 + 3
1 + 3
3 + 10
1 + 3
1 + 4444
33 + 33
77 + 88
88 + 88
33 + 44
1 
eq
rg parse
1
1
1 + 3
hola
1
1
1
1
1
1
1
1
1 + 3
1
1 + 3
1 + 3
1 + 3
1 + 3
1
1
1 + 3
1
1
1234
1
$nu
1 | debug
debug -r
1
1234
1
1
1 + 3
1 + 3
1 + 3
1 + 3
1 + 3
1 + 3
1 + 3
1 + 3
1 + 3
1 + 3
1 + 3
version | get branch
1 + 3
ast '1 + 3'
ast '1 + 3'
ast '1 + 3'
1 + 3 | debug
ast 
ast '1 + 3' | debug
ast '1 + 3'
ast '1 + 3'
ast '1 + 3'
ast '1 + 3'
ast '1 + 3' | debug
ast '1 + 3' | debug
ast '1 + 3' | debug | table -e
ast '1 + 3' | debug | table
ast '1 + 3' | debug
ast '1 + 3' | debug -r
ast '1 + 3' | debug -r
ast '1 + 3' | inspect
ast '1 + 3' | inspect
ast -m '1 + 3'
ast -j '1 + 3'
ast '1 + 3'
ast -m -j '1 + 3'
ast -m -j '1 + 3' | get block
ast -m -j '1 + 3' | get block
ast -j '1 + 3' | get block
ast -j '1 + 3' | get block
span
ast -j '1 + 3' | get block
ast -j '1 + 3'
ast -j '1 + 3'
ast '1 + 3'
ast '1 + 3'
ast '1 + 3'
ast 'hola'
ast 'hola'
ast version
ast version
astfilter version
astfilter '1 + 3'
astfilter '1 + 3'
astfilter '1 + 3'
ast '1 + 3'
ast version
astfilter version
astfilter version
astfilter version
astfilter version
astfilter "hola"
astfilter "hola"
$env.config.filesize.format = b
0..59 | each {|r|<\n>sleep 1000ms<\n>echo [{index: ($r) mem: (debug:info | get process.memory)}]<\n>} | collect {$in} | flatten
0..59 | each {|r|<\n>sleep 1000ms<\n>echo [{index: ($r) mem: (debug:info | get process.memory)}]<\n>} | collect | {$in} | flatten
0..59 | each {|r|<\n>sleep 1000ms<\n>echo [{index: ($r) mem: (debug:info | get process.memory)}]<\n>} | collect  {$in} | flatten
0..59 | each {|r|<\n>sleep 1000ms<\n>echo [{index: ($r) mem: (debug info | get process.memory)}]<\n>} | collect  {$in} | flatten
nus
show_mem
ga show_mem.nu
def rockme [] {<\n>    0..3 | each {|r|<\n>        sleep 10ms<\n>        echo [{index: ($r) mem: (debug info | get process.memory)}]<\n>    } | collect  {$in} | flatten<\n>}
rockme
rockme
[1 2 3] | $in.1 * $in.2
[1 2 3] | $in.1 + $in.2
[1 2 3] | $in.0 + $in.2
[1 2 3] | $in.0 * $in.2
[1 2 3] | $in
[1 2 3]
nus
nus
nus
nus
nus
$recs
nus
show_mem
show_mem
ga show_mem.nu
table_ex
table_ex
show_mem_01
show_mem
show_mem
show_mem
show_mem_01
show_mem_01
format_auto
show_mem_01
format_b
show_mem_01
format_b
show_mem_01
ga show_mem.nu
gcmw
show_mem
show_mem_01
show_mem
format_auto
show_mem
format_auto
show_mem
scope engine_stats
use nu-git-manager *
use nu-git-manager *
use nu-git-manager *
17
~/j/tmp17
c
c
rg module
rg export
rg export
use nu-git-manager *
use nu-git-manager *
use nu-git-manager *
use nu-git-manager *
use nu-git-manager *
use nupm *
use nupm/
nupm install --force --path .
nuconfig
c
use nu-git-manager *
const REPRO_ENV = { GIT_REPOS_HOME: /tmp/repos/, GIT_REPOS_CACHE: /tmp/repos.cache }
sortbyme
$nu
nuconfig
nus
sortbyme
$nu
nuconfig
sortbyme
sortbyme
'john brown ran home' | split column ' ' cmd
'john brown ran home' | split column ' '
'john brown ran home' | split column ' ' cmd ding dong dies
'john brown ran home now' | split column ' ' cmd ding dong dies
'john brown ran home now and loved life' | split column ' ' cmd ding dong dies
'john brown ran home now and loved life' | split column ' ' cmd ding dong dies puke
'john brown ran home' | split column ' ' cmd ding dong dies puke
cat why.txt
nus
savenlines 15
cat why.txt
savenlines 3
savenlines 3
savenlines 4
cat why.txt
savenlines 2
cat why.txt
savenlines 7
cat why.txt
ga sort_by.nu
cat why.txt
savenlines 20
cat why.txt
savenlines 10
cat why.txt
sortbyme
ga sort_by.nu
gco sort_by.nu
groupby
groupby why.txt
savenlines 30
groupby why.txt
ga sort_by.nu
savenlines 50
groupby why.txt
groupby why.txt
[john bill mike bill] | group-by
[john bill mike bill] | group-by --to-table
[john bill mike bill]
groupby why.txt
groupby why.txt
groupby why.txt | type
gco sort_by.nu
groupby why.txt
groupby why.txt
sortbyme
sortbyme
gco sort_by.nu
groupby why.txt
groupby why.txt
groupby why.txt
groupby why.txt
more why.txt
gco sort_by.nu
groupby why.txt
groupby why.txt
groupby why.txt
groupby why.txt
gco sort_by.nu
{'name': 'nu', 'stars': 5} | update name 'Nushell'
{'name': 'nu', 'stars': 5}
sortbyme
gco sort_by.nu
sortbyme
sortbyme
gco sort_by.nu
sortbyme
sortbyme
gco sort_by.nu
sortbyme
sortbyme
gco sort_by.nu
npmg
use nupm
nupm install --force --path .
17
rm -fr nupm
getnupm
use nupm
nupm install
nupm install --path .
nuconfig
rm -fr nupm
nupmg
use nupm
nupm install --path .
nuconfig
npmg
use nupm
nupm install --path .
nuconfig
$env
$env
$env
$env.config
$nu
$nu.default-config-dir
$nu.default-config-dir | path join "nupm"
nuconfig
$env
$env.NU
$env.NUPM_HOME
$env.NUPM_HOME
$env.PATH = (<\n>    $env.PATH<\n>        | split row (char esep)<\n>        | ....<\n>        | prepend ($env.NUPM_HOME | path join "scripts")<\n>        | uniq<\n>)<\n>
$env.PATH = (<\n>    $env.PATH<\n>        | split row (char esep)<\n>        | prepend ($env.NUPM_HOME | path join "scripts")<\n>        | uniq<\n>)<\n>
$env.PATH
$env.NU_LIB_DIRS
$env.NU_LIB_DIRS
$env.PATH
$env
nupm
use nupm
use nupm
use nupm
nupm install --path --force nu-git-manager
nupm install --path --force nu-git-manager
nupm
nupm
use nupm
nupm
t17
$nu
$env
$env
t17
use nupm
nupm install --path "~/.local/share/nupm"
$env.NUPM_HOME
$env.NUPM_HOME
$nu
$nu.home-path
$env.NUPM_HOME
use nupm
nupm install --path .
nupm
nupm
use nupm
nupm
eq
fd config.nu
def get-nupm-home []: nothing -> path {<\n>    $env.NUPM_HOME? | default ($nu.home-path | path join ".nupm"<\n>    ) | path expand | path sanitize<\n>}<\n>
def get-nupm-home []: nothing -> path {<\n>    $env.NUPM_HOME? | default ($nu.home-path | path join ".nupm")<\n>    | path expand | path sanitize<\n>}<\n>
def get-nupm-home []: nothing -> path {<\n>    $env.NUPM_HOME? | default ($nu.home-path | path join ".nupm")<\n>    | path expand }
get-nupm-home
get-nupm-home
nupm
nupm
$env.NUPM_HOME
nupm
nupm install --path --force nu-git-manager
nupm install --path --force .
use nu-git-manager *
use nu-git-manager *
cat cache.nuon
rm -fr nu-git-manager/
rm -fr nu-git-manager/
rm -fr .cache
nupm install --path --force .
use nu-git-manager *
rg GIT_REPOS_HOME
rg GIT_REPOS_CACHE
$nu
$env
$nu
cp $nu.config-path ~/j/tmp20
nuconfig
sum config.nu ~/j/tmp20/config.nu
$env.NU_CONFIG_ME
cp $nu.config-path $env.NU_CONFIG_ME
t17
pwd
cp $nu.config-path $env.NU_CONFIG_ME
sum $nu.config-path ($env.NU_CONFIG_ME | path join "config.nu"<\n>)
cpconfig
nuconfig
cpconfig
cpconfig
$nu
nuconfig
nuconfig
$ALIAS_PATH
$env.alias-path
nuconfig
cpconfig
cpconfig
cpconfig
cpconifg
cpconfig
cpconfig
cpconfig
c
ga alias.nu config.nu env.nu
cpconfig
pwd
use nupm
nupm install --force --path .
use nupm
nupm install --path --force nu-git-manager
pwd
use nupm
nupm install --path --force nu-git-manager
nupm install --path --force nu-git-manager
nupm install --path --force src/nu-git-manager
$env
$env.NUPM_HOME
rm -fr .nupm
nupmg
use nupm
nupm install --force --path .
$env.GIT_REPOS_HOME
$env.GIT_REPOS_CACHE
rm -fr nu-git-manager/
use nupm
nupm install --path --force nu-git-manager
nupm install --path --force src/nu-git-manager
nupm install --path /Users/ma/j/tmp17/nu-git-manager
$env.NUPM_HOME
rm -fr .nupm
nupm install --path nu-git-manager
nupmg
use nupm
nupm install --force --path .
use nupm
nupm install --path ./nu-git-manager
nupm install --path nu-git-manager
nupm install --path ~/j/tmp17/nu-git-manager/
nupm install --path /Users/ma/j/tmp17/nu-git-manager --force
nupm install --path nu-git-manager --force
nupm install --path ./nu-git-manager --force
nupm install --path ~/j/tmp17/nu-git-manager --force
use nu-git-manager *
nuconfig
use nu-git-manager *
use nu-git-manager *
list-repos-in-store
use nu-git-manager *
use nu-git-manager *
use nu-git-manager *
use nu-git-manager *
check-cache-file
use nu-git-manager *
check-cache-file /Users/ma/nu-git-manager/cache.nuon
rg add-to-cache
rg add-to-cache
rg make-cache
make-cache /Users/ma/nu-git-manager/cache.nuon
mkdir (cache.nuon | path dirname)
path
pwd
path nu-git-manager
path dirname
cache.nuon | path dirname
(cache.nuon | path dirname)
('cache.nuon' | path dirname)
pwd
(/Users/ma/nu-git-manager/cache.nuon | path dirname)
("/Users/ma/nu-git-manager/cache.nuon" | path dirname)
mkdir ("/Users/ma/nu-git-manager/cache.nuon" | path dirname)
rg GIT_REPOS_CACHE
$env.GIT_REPOS_CACHE
gco src/nu-git-manager-sugar/mod.nu
gco src/nu-git-manager/mod.nu
list-repos-in-store
$env.GIT_REPOS_CACHE?
path expand
path
print $x
list-p1
list-p1
list-p1
list-p1
[john]
[john] | range 1.. | zip ($sorted | range ..(-2))
$bill | range 1.. | zip ($bill | range ..(-2))
$sorted | range 1.. | zip ($sorted | range ..(-2))
$sorted | range 1..
nus
test01
test01
nus
test01
nus
t17
test01
nus
test01
nus
test01
nus
test01
eq
rg "pub struct Range"
test01
test01
test02
test02 | table -e
test02 | table -e
test02
[1 2 3] | range 1..
[1 2 3] | range 2..
[1 2 3 4] | range 1..2
[1] | range 1..
[1 2] | range 1..
[1 2] | range 0..
test01
test01
test02
ga rangebug.nu
test02
test01
test03
test01
test02
test03
ga rangebug.nu
($sorted | range ..(-2))
($sorted | range ..(-3))
($sorted | range ..(-4))
[0,1,2,3,4,5] | range (-3)..-2
[0,1,2,3,4,5] | range ..-2
[0,1,2,3,4,5] | range ..-1
[0,1,2,3,4,5] | range ..-2
[1 2] | zip [3 4]
[michael michele jason] | zip [angerman godwin booth]
test04
ga rangebug.nu
[1] | range 1..
[] | range 1..
[1] | range 1..
($sorted | range ..(-2))
($sorted | range ..(-2))
[] | zip []
[] | zip []
[] | zip ($sorted | range ..(-2))
($sorted | range ..(-2))
([] | range ..(-2))
([1] | range ..(-2))
([1] | range ..(-2))
test01a
test01a
gco rangebug.nu
test01b
([1] | range ..(-2))
([1] | range ..(-2))
([1] | range ..(-1))
([1 2 3] | range ..(-1))
([1 2 3] | range ..(-2))
([1 2 3] | range ..(-3))
([1 2 3] | range ..(-4))
([1 2 3] | range ..(-1))
([1 2 3] | range ..(1))
([1 2 3] | range ..1)
[1 2 3] | range ..1
[0,1,2,3,4,5] | range (-3)..-2
[0,1,2,3,4,5] | range ..-2
[0,1,2,3,4,5] | range ..2
[0,1,2,3,4,5] | range ..-2
([1] | range ..(-2))
([1] | range ..(2))
~/j/tmp17/nuscripts> ([1] | range ..(-2))<\n>╭────────────╮<\n>│ empty list │<\n>╰────────────╯<\n>~/j/tmp17/nuscripts> ([1] | range ..(2))<\n>╭───┬───╮<\n>│ 0 │ 1 │<\n>╰───┴───╯<\n>
([1] | range ..(-2))
([1] | range ..(2))
([1] | range ..(-2))
([1] | range ..(-1))
([1] | range ..(-4))
([1] | range ..(-2))
([1] | range ..(-3))
([1] | range ..(-2))
([1] | range ..(-1))
([1] | range ..(-3))
([1] | range ..(-2))
([1] | range ..(-3))
([1] | range ..(-2))
([1] | range ..(-1))
test10a
test10b
test10c
ga rangebug.nu
test10a
test10b
test10c
test10a
test10c
test10b
test10a
test10b
test10c
([1] | range ..(-3))
([1] | range ..(3))
([1] | range ..(2))
([1] | range ..(1<\n>))
test01
($sorted | range ..(-2))
($sorted | range ..(-2))
($sorted | range ..(-1))
($sorted | range ..(-2))
($sorted | range ..(-3))
gco rangebug.nu
([1] | range ..(-4))
dl
ltm
t22
t10
dl
cp google-jsi-20211229.csv ~/j/tmp10/
t10
cp google-jsi-20211229.csv photo1.csv
nuno
echo get-nupm-home
$nu.get-nupm-home
$env.NUPM_HOME
rm -fr .nupm
nupmg
use nupm
use nupm
nupm install --force --path .
t10
touch test01.csv
nurun
nupm install --path nu-git-manager --force
nupm install --path nu-git-manager --force
nupm install --path .  --force
nupm install --path nu-git-manager --force
nupm install --path .  --force
nus
t00
t0
t10
cat photo1.csv
cat test01.csv
nus
mkdir data
cp ~/j/tmp00/test01.csv .
nupmg
gppm
c
c
clear
clear
eq
rg clear
nucom
clear
eq
rg std
rg std
fd std.nu
eq
use std
use mike
use std
use std
use std
use std
eq
17
t17
cp install.nu ~/j/tmp17/nuscripts/
nus
mv install.nu fileio.nu
test1
test01
test1
test1
ga data
test1
nupmg
cp log.nu ~/j/tmp17/nuscripts/
nus
rg Unknown
eq
rg "gather unknown"
rg "gather system"
log collect
man log
nus
nupmg
nus
test10
test10 data
test10 data
test10 data
test10 data
ga fileio.nu log.nu
test10 data
test10 data
test10 data
ga fileio.nu
gcmw
test10 data
ga fileio.nu
gcmw
nus
test10 data
ns
nus
test10 data
ga fileio.nu
gcmw
test10 data
ga fileio.nu
gcmw
scope modules | where name =~ '^std' | get submodules.0
scope modules | where name =~ '^std' | get submodules.0
scope modules | where name =~ '^std' | get submodules.0
scope
rg "struct scope"
rg "struct Scope"
$nu
scope
scope modules
scope engine-stats
rg active_overlays
rg active_overlays
overlay
overlay list
rg OverlayFrame
rg OverlayFrame
overlay list
nuno
pwd
cpconfig
ga alias.nu config.nu env.nu
cpconfig
nupmg
nupm test
nupm test
nupm test
numpg
npmg
nupmg
gppm
nupm test
pwd
cache-manipulation
install-package
list-all-repos-in-store
get-repo-cache
nupm test
nupm test
nupm test
nupm test
nupm test
nut
nuconfig
nupmg
nut
nut
cpconfig
ga alias.nu
cpconfig
stars
nupmg
nut
nut
pwd
nut
nut
cat .rust | grep nut
cat .rust | grep nupm
scope
scope modules | where name =~ '^std' | get submodules.0
scope modules
scope modules
scope modules | where name =~ '^std'
scope modules | where name =~ '^std'
scope modules | where name =~ '^std' | get submodules.0
rciy
scopemodstd
nuconfig
scopemodstd
scopemodstd
$nu
scopemodstd
scopemodstd
const
clear
nuconfig
scopemodstd
scopemodstd
cpconfig
cpconfig
ga alias.nu config.nu
nupmg
nuconfig
clear
nuconfig
touch nupm.nu
nuconfig
install-nupm
install-nu-git-manager
use nupm
nupm install --force --path .
npm
t17
nupm install --path --force nu-git-manager
ps
nu --commands $"use ($env.PWD)/nupm/; nupm test"
cpconfig
nuconfig
install-nupm
install-nu-git-manager
install-nupm
install-nu-git-manager
nuconfig
install-nupm
install-nu-git-manager
cpconfig
ga alias.nu env.nu nupm.nu
nuconfig
install-nupm
nuconfig
install-nupm
nuconfig
install-nupm
nuconfig
install-nupm
nupm
nupm
nuconfig
use nu-git-manager *
nuconfig
install-nupm
nupmg
use nupm
nuconfig
install-nupm
install-nupm
install-nupm
install-nupm
exigt
sumconfig
sumconfig
pwd
nuconfig
diff alias.nu ~/j/tmp17/nuconfig/alias.nu
cp alias.nu ~/j/tmp17/nuconfig/alias.nu
ga alias.nu
sumconfig
pwd
nuconfig
cp ~/j/tmp17/nuconfig/nupm.nu .
sumconfig
cp ~/j/tmp17/nuconfig/config.nu .
sumconfig
cpconfig
sumconfig
sumconfig
cpconfig
cpconfig
ga alias.nu
nuconfig
install-nupm
install-nu-git-manager
cpconfig
ga nupm.nu
cpconfig
cpconfig
sumconfig
sumconfig
nuconfig
install-nupm
ps
psnu
ps | get name
test1
test1
test1
test1
test1
test1
test1
test1
test2
test1
test2
gcmw
test2
test2
test2
test2
test3
test3
test3
test2
test2
test4
test4
test4
test5
index(["bar", "foo", "baz"], "foo")
index
test2
test2
test2
test2
test2
nusn
gp
gpnus
test1
test2
test3
test4
test5
gcmw
test1
test2
test3
test4
test5
more temp.nu
cp table_grouping.nu ~/j/tmp17/nuscripts/
nus
grso
ga table_grouping.nu
[a, b, c]
test6
test6
gcmw
test6
test6
test6
test6
test6
test6
test7
gcmw
test6
test7
test8
test7
test7
test7
test7
test8
test9
test7
test8
test9
gcmw
test8
fd LaunchDaemons
pwd
[[a b]; [1 2] [2 [4 4]]] | table --collapse
[[a b]; [1 2] [3 4] [5 6]] | roll down
[[a b]; [1 2] [3 4] [5 6]]
[[a b]; [1 2] [3 4] [5 6]] | ast
ast '[[a b]; [1 2] [3 4] [5 6]]'
[[a b]; [1 2] [3 bill]]
[[a b]; [1 2] [3 4]] | debug
nupro
[[a b]; [1 2] [3 4]] | debug
[[a b]; [1 2] [3 4]] | debug -r
[[a b]; [1 2] [3 4]] | debug -r
[[a b]; [1 2] [3 4]] | debug -r
[1 2 3] | debug -r
[a:1, b:2] | debug -r
[[a b] [1 2] [c d]] | debug -r
[[a] [1] 2 [c]]
[[a] [1] 2 [c]] | debug -r
aria2c
nus
sh nightly.nu
nu-fetch-nightly
nus
nu-fetch-nightly
./nu
[[a] [1] [c]]
[a b c]
[[a] [1] [c]] | debug -r
[[a] [1] [c]] | debug -r
[[a b]; [1 2] [3 4]] | debug -r
[[a b]; [1 2] [3 4]] | debug -r
[[a b]; [1 a] [3 b]] | debug -r
[[a b]; [1 a] [3 b]] | debug -r
[[a b]; [a 1] [3 b]] | debug -r
[[a b c]; [a 1] [3 b]] | debug -r
[[a b]; [a 1 b] [3 b 2]] | debug -r
nupro
use nupm
t17
get-nupm-home
$env.NUPM_HOME?
$nu.home-path
$env.NUPM_HOME = ($nu.home-path | path join ".nupm")
$env.NUPM_HOME
get-nupm-home
pwd
get-nupm-home
nuconfig
install-nupm
install-nu-git-manager
nuconfig
install-nu-pm
install-nupm
install-nu-git-manager
install-nupm
use nupm
use nupm
nupm install --force --path .
nuconfig
$env.NUPM_HOME = ($nu.home-path | path join ".nupm")
$env.NUPM_HOME
$nu
install-nupm
use nupm
use nupm
nupm install --force --path .
install-nupm
use nupm
nupm install --force --path .
install-nupm
nu --commands $"use ($env.PWD)/nupm/"; nupm install --force --path .
use nupm
nupm install --force --path .
rm -fr .nupm
goto-nupm
goto-nupm
nupmg
use nupm
nupm install --force --path .
nupmg
use nupm
use nupm
installnupm
nupmg
installnupm
npmg
nupmg
use nupm
installnupm
echo hello
installnupm
def installnupm [] {<\n>  echo hello<\n>  #nupm install --force --path .<\n>}
installnupm
def installnupm [] {<\n>  echo hello<\n>  nupm install --force --path .<\n>}<\n>
use nupm
installnupm
use nupm
nupm install --force --path .
installnupm
$nu
touch why.nu
e why.nu
cat why.nu
nuconfig
cpconfig-reverse
nuconfig
cat why.nu
sumconfig
nuconfig
cat alias.nu
cp alias.nu ~/j/tmp17
sum alias.nu ~/j/tmp17/alias.nu
sumconfig
cpconfig-reverse
sumconfig
sumconfig
cp $nu.config-path $env.NU_CONFIG_ME
c
cat config.nu
ga config.nu
rm why.nu
rm why.nu~
nuconfig
cat alias.nu
cp $env.alias-path $env.NU_CONFIG_ME
ga alias.nu
sumconfig
rm -fr .nupm
npmg
nupmg
use nupm
nupm install --force --path .
nuconfig
use nu-git-manager *
nuconfig
get-nupm-home
$env.NUPM_HOME
get-nupm-home
sumconfig
cpconfig
ga nupm.nu
cpconfig
nuconfig
use nu-git-manager *
nuconfig
nuno
use nu-git-manager *
alias whymelord use nu-git-manager *
alias whymelord = use nu-git-manager *
def jimloves [] { use nu-git-manager * }
jimloves
use nu-git-manager *
nuno
nuconfig
nuno
nuno
cpconfig
ga alias.nu
gcmw
nuconfig
nuconfig
nupmg
nuconfig
nupmg
use nupm
nuconfig
nupmg
use nupm
nuconfig
nuconfig
nupmg
use nupm
nuconfig
nupmg
use nupm
nuconfig
nuconfig
nuconfig
nupmg
use nupm
nuconfig
nupmg
nuconfig
nupmg
nuconfig
use nupm
nupmg
use nupm
nuconfig
use nupm
nupmg
use nupm
nuconfig
nupmg
use nupm
nuconfig
cpconfig
ga nupm.nu
gcmw
nupmg
use nupm
nupmg
use nupm
nuconfig
nuno
ga nupm/Readme.md
gcmw
install-nupm
install-nupm
nuconfig
cpconfig
sumconfig
cpconfig-reverse
sumconfig
cpconfig
ga alias.nu
gcmw
sumconfig
cpconfig-reverse 
cpconfig-reverse 
cpconfig
nuconfig
nupmg
use nupm
nuconfig
install-nupm
nuno
ga nupm/Readme.md
gcmw
cpconfig
nupmg
use nupm
nuconfig
install-nupm
cpconfig
nuconfig
nuno
nupmg
use nupm
nuconfig
nuno
ga nupm/Readme.md
t17
mkdir amtoine
gc git@github.com:amtoine/dotfiles.git
sumconfig
cpconfig
ga config.nu
cpconfig
cpconfig-reverse 
sumconfig
{{nupm-home}}
nuconfig
cp env.nu env-orig.nu
sumconfig
c
eq
rg NU_LIB_DIRS
{{nupm-home}}
nuconfig
pwd
nuconfig
eq
rg "pub struct Use"
eq
rg NU_LIB_DIRS
use nu-git-manager *
jack
cat why.nu
jack
changeme
changeme
changeme
changeme
eq
changedir
nus
ga changedir.nu
changedir
touch filter_csv.nu
filter-test01-photo
filter-test01-photo
filter-test01 photo
filter-test01 bill
ga filter_csv.nu
filter-csv data/test01.csv photo
filter-csv data/test02.csv photo
filter-csv data/test01.csv photo
filter-csv data/test01.csv photo
filter-csv data/test01.csv photox
filter-csv data/test01.csv ralph
filter-test01 bill
filter-test01 photo
filter-csv data/test01.csv ralph
filter-csv data/test01.csv ralph
filter-csv data/test01.csv photo
filter-test01 photo
filter-test01 bill
filter-test01 photox
filter-test01-photo
ga filter_csv.nu
filter-csv data/test02.csv photo
filter-csv data/test01.csv photo
filter-csv data/test01.csv photox
filter-test01-group photo
filter-test01-group photo
ga filter_csv.nu
'{"name": "Alice", "age": 30}' | from json
'{"name": "Alice", "age": 30}' | from json | get name
'{"name": "Alice", "age": 30}' | from json | debug -r
'{"name": "Alice", "age": 30}' | from json | get name
'[{"name": "Alice", "age": 30}, {"name": "Bob", "age": 25}]'<\n>| from json<\n>| where age > 28
'[{"name": "Alice", "age": 30}, {"name": "Bob", "age": 25}]' | from json
use toolbox.nu *
fd toolbox.nu
nus
touch jq.nu
use jq.nu
'{"data": {"values": [1, 2, 3], "nested": {"values": [4, 5, 6]}}}'<\n>| from json
use jq.nu *
'{"data": {"values": [1, 2, 3], "nested": {"values": [4, 5, 6]}}}'<\n>| from json
nus
ga jq.nu
[[a b]; [a 1 b] [3 b 2]]
[[a b c]; [a 1 b] [3 b 2]]
'{"data": {"values": [1, 2, 3], "nested": {"values": [4, 5, 6]}}}'<\n>| from json
'{"data": {"values": [1, 2, 3], "nested": {"values": [4, 5, 6]}}}' | from json
'{"data": {"values": [1, 2, 3], "nested": {"values": [4, 5, 6]}}}' | from json | debug -r
'{"data": {"values": [1, 2, 3], "nested": {"values": [4, 5, 6]}}}' | from json | debug -r
[[a b]; [a b] [c d]]
[[a b]; [a b] [c d]] | debug -r
[[a b]; [a b] [c d]]
'{"data": {"values": [1, 2, 3], "nested": {"values": [4, 5, 6]}}}' | from json
[[data]; [values nested] [0 1] [[values]; [4 5]]]
[[data]; [[values nested]; [0 1] [[values]; [4 5]]]<\n>]
[[data]; [[values nested]; [0 1] [[values]; [4 5]]]<\n>] | debug -r
nutmp
ga scratchpad/
'{"data": {"values": [1, 2, 3], "nested": {"values": [4, 5, 6]}}}' | from json
ga pad00.md
gcmw
[[data]; [[values nested]; [0 1] [[values]; [4 5]]]]
[[data]; [[values nested]; [0 1] [[values]; [4 5]]]] | table -e
'{"data": {"values": [1, 2, 3], "nested": {"values": [4, 5, 6]}}}' | from json | debug -r
'{"data": {"values": [1, 2, 3], "nested": {"values": [4, 5, 6]}}}' | from json
nutmp
$jq1
[data]
{name: "Bobby", age: 99}
$record2
$record1
$record2
nutmp
$record2
$jq1
ga pad00.nu
gcmw
$jq1
$record2
nutmp
$record3
jq1
$jq1
ga pad00.nu
gcmw
$record4
$jq1
ga pad00.nu
gcmw
nurun
nutmp
$record4
$jq1
nusn
nus
cp jq.nu ~/j/tmp17/nutmp/scratchpad/
nutmp
sp
ga jq.nu
test1
test01
$record4
test01
ga pad00.nu
test01
test00
test01
ga pad00.nu
gcmw
filter
ga pad00.nu
gcmw
sam | len
'sam' | str length
'sam' | str length
'sam' | str length
4 | inc
3 + 1
'sam' | str length
'sam' | str length
1 + 3
4
456
'sam' | str length
'sam' | str length
'sam' | str length
'sam' | str length
'sam' | str length
1 + 3
'sam' | str length
'sam' | str length
1 + 3
1 + 3
'sam' | str length
'sam' | str length
1 + 3
'sam' | str length
'sam' | str length
'sam' | str length
fd eval.rs
1 + 3 | debug -r
1 + 3 | ast
ast '1 + 3'
ast '1 + 3'
nupar
'sam' | str length
[1 2 3] | grid
{name: 'foo', b: 1, c: 2} | grid
nupm test
pmg
gppm
nupm test
use nupm
nupm test
ng
nupm test
use nupm
nupm test
nupm test
nupm
pmg
use nupm
nupm test
nupm test
nupm test get-store-root
nppmg
pmg
use nupm
nupm test get-store-root
pmg
nupm install --force --path .
nupm test get-store-root
eq
fd std
rg test_std
rg test_std
eq
eq
cargo run -- -c 'use std testing; testing run-tests --path crates/nu-std'
cargo run -- -c 'use std testing; testing run-tests --path crates/nu-std'
nurun -c 'use std testing; testing run-tests --path crates/nu-std'
nurun -c "use std testing; testing run-tests --path crates/nu-std"
nurun
use std testing
testing run-tests --path crates/nu-std
use std
testing run-tests --path crates/nu-std
use std testing
testing run-tests --path crates/nu-std
span
use std testing
rg main
rg main
rg "export def main"
rg "export def main"
use std testing
rg "Exported commands"
use std xml
xml
use std testing
testing
nustd
use std testing
testing
testing run-tests --path crates/nu-std
eq
testing run-tests --path crates/nu-std
testing run-tests
testing
run-tests --path crates/nu-std
use std testing
dt
dt datetime-diff
testing run-tests
use std testing
testing run-tests
use std
use std
testing run-tests
use std
std testing run-tests
use std
std testing run-tests
std testing run-tests --list
std testing run-tests --list
use std
std testing run-tests --list
std testing run-tests --list
16
t02
t10
std testing run-tests --list
eq
std testing run-test
std testing run-tests
std testing run-test
t17
use std
nnp
use std testing run-tests
use std
std testing run-tests
std testing run-tests
nustd
use std assert
assert 3 == 3
assert (3 == 3)
assert (3 == 4)
assert (bill == bill)
assert ("bill" == "bill")
assert ("bill" == "bilx")
assert not ("bill" == "bilx")
assert not ("bill" == "bill")
{|| 12}
{|| a}
{|| abc}
use std
log-types
log log-types
std log
std log critical 'ralph'
std log error 'sam'
std log warning 'pete'
use std
std log warning 'pete'
use std log
std log warning 'pete'
log warning 'pete1'
log warning 'pete1'
log warning 'pete1'
use std
log warning 'pete1'
use std log
log warning 'pete1'
use std
log warning 'pete1'
std log warning 'pete1'
log info 'hb1'
std log info 'hb1'
std bench { 1 + 2 } -n 10 | table -e
use std
std bench { 1 + 2 } -n 10 | table -e
use std
use std
use std
use std
use std
use std
use std
std bench { 1 + 2 } -n 10 | table -e
std bench { 1 + 2 } -n 10 | table
use std
bench { 1 + 2 } -n 10 | table
$env.PWD
use std ellie
ellie
use std bench
bench { 1 + 2 } -n 10 | table
bench { 1 + 2 } -n 10 | table -e
use std null-device
cat xxx.txt e> (null-device)
cat yyy.txt
use std null-device
cat yoh.txt
cat xxx.txt (null-device)
cat xxx.txt e> yoh.txt
cat yoh.txt
rm yoh.txt
use std
std check-clipboard
use std clip
eq
clip
use std math
PHI
math.PI
use std math PI
PI
$PI
use std
use std modules
modules
modules | table
modules
modules | table
modules | table | transpose
modules | transpose
rex
shake
rsql
use toolkit
toolkit fmt
toolkit fmt
fmt
clippy
test
test stdlib
nuno
ga Readme.md
gcmw
eq
use toolkit
rg toolkit
use toolkit.nu fmt
use toolkit.nu
use toolkit.nu
use toolkit.nu
fmt
use toolkit.nu
fmt
fmt
use toolkit.nu
toolkit fmt
use stdlib
use std
use toolkit.nu
use std
use toolkit.nu
fmt
use toolkit.nu
use toolkit.nu
fmt
use toolkit.nu
toolkit fmt
toolkit fmt --verbose
toolkit fmt --check
stor
stor insert --table-name nudb --data-record {bool1: true, int1: 2, float1: 1.1, str1: fdncred, datetime1: 2023-04-17} 
stor update --table-name nudb --update-record {str1: toby datetime1: 2021-04-17} --where-clause "bool1 = 1"
stor insert --table-name nudb --data-record {bool1: true, int1: 5, float1: 1.1, str1: fdncred, datetime1: 2023-04-17}
stor create --table-name nudb --columns {bool1: bool, int1: int, float1: float, str1: str, datetime1: datetime}
stor insert --table-name nudb --data-record {bool1: true, int1: 5, float1: 1.1, str1: fdncred, datetime1: 2023-04-17}
stor update --table-name nudb --update-record {str1: toby datetime1: 2021-04-17} --where-clause "bool1 = 1"
nusn
nus
rex
gp
ltm
mkdir hashmap
mkdir src
touch main.rs
cp notrace/Cargo.toml hashmap/
touch Readme.md
cb
cb
cb
cf
cb
cb
cb
cb
cb
cr
cb
cr
cargo run
cb
cp .gitignore ../hashmap/
cb
rm -fr target
c
cat .gitignore
e .gitignore
rm .gitignore~
ga hashmap/
nuconfig
rex
cb
cr
rex
cr
rex
cr
ga .gitignore
cpconfig
$nu.default-config-dir
rex
cb
cb
cr
ga alias.nu config.nu
rex
fd examples
mkdir examples
touch ex00.rs
cre ex00
ga examples
touch dong.csv | append {name: berk, value: 34}
touch .gitignore
rm dong.csv
nusn
nus
ga .gitignore
ga data/test02.csv
gcmw
nuconfig
17
t17
nusn
nus
t17
'save me' | save foo.txt
cat foo.txt
'append me' | save --append foo.txt
cat foo.txt
rm foo.txt
'append me\n' | save --append foo.txt
rm foo.txt
'save me\n' | save foo.txt
'append me' | save --append foo.txt
rm foo.txt
'save me\n' | save foo.txt
'append me\n' | save --append foo.txt
cat foo.txt
rm foo.txt
append ("foo\n" | str trim) | save --append foo.txt
append ("bar\n" | str trim) | save --append foo.txt
cat foo.txt
nus
rm foo.txt
cat foo.txt
cat foo.txt
gcmw
ga .gitignore
gcmw
update "foo\n"
cat foo.txt
myupdate "michael\n"
cat foo.txt
myupdate "iris\n"
cat foo.txt
rm foo.txt
cat foo.txt
ga .gitignore
gcmw
ga .gitignore
gcmw
[a b c] | filter {|e| $e != "b"}
rg "file exists"
rg "file available"
rg "path exists"
gcmw
$myanswer
partone
partone
$why
$myanswer2
gcmw
partone
$myanswer
$myanswer
ga .gitignore
exit
exit
l
exit
gs
rg regex
exit
gs
l
touch find.nu
partwo
partwo
partwo
partwo
partwo
exit
partwo
partwo
partwo
partwo
partwo
partwo
gs
gs
jjj
gs
partwo
partwo
nusn
rg find
rg find
gs
gs
nus
gs
partwo
partwo
partwo
gs
gs
gs
s
c
gs
exit
parthree
parthree
gs
gs
gs
l
fd find
mkdir filters
touch find.nu
partone
partone
partone
partone
gs
ga filters
jjj
gs
l archive/
partwo
gs
gs
exit
gs
partone
partone
partwo
partwo
partwo
gs
gs
ga find.nu
jjj
partone
partwo
gs
ga find.nu
jjj
partwo
l
gs
exit
exit
go
go
gs
jjj
nuconfig
l
l
nus
nuconfig
exit
cp ~/j/tmp17/nuscripts/history.txt .
l
exit
history
gs
gs history.nu
cls
gd history.nu
source history.nu
go
l
gs
ga history.nu
gcom 'clean up history.nu'
jjj
gs
cd archive
gs
l
cd ..
l
gs
l archive/
gs
l
cp history.txt history-231208a.txt
mv history-231208a.txt archive/
gs
mv history-orig.txt archive/
gs
rm history.txt historynew.txt
gs
c
gs
gco history.txt
gs
e .gitignore
gs
ga .gitignore
gcom 'add the archive directory to gitignore'
gs
jjj
gs
exit
